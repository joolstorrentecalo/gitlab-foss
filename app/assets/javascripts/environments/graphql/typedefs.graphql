#import "~/graphql_shared/client/page_info.typedefs.graphql"
#import "~/kubernetes_dashboard/graphql/typedefs.graphql"

type LocalEnvironment {
  id: Int!
  globalId: ID!
  name: String!
  folderPath: String
  stopPath: String
  deletePath: String
  retryUrl: String
  autoStopPath: String
}

input LocalEnvironmentInput {
  id: Int!
  globalId: ID!
  name: String!
  folderPath: String
  stopPath: String
  deletePath: String
  retryUrl: String
  autoStopPath: String
}

type NestedLocalEnvironment {
  name: String!
  size: Int!
  latest: LocalEnvironment!
}

input NestedLocalEnvironmentInput {
  name: String!
  size: Int!
  latest: LocalEnvironmentInput!
}

type LocalEnvironmentFolder {
  environments: [LocalEnvironment!]!
  availableCount: Int!
  stoppedCount: Int!
}

type ReviewApp {
  canSetupReviewApp: Boolean!
  allClustersEmpty: Boolean!
  reviewSnippet: String
}

type LocalEnvironmentApp {
  stoppedCount: Int!
  availableCount: Int!
  environments: [NestedLocalEnvironment!]!
  reviewApp: ReviewApp!
}

type LocalErrors {
  errors: [String!]!
}

input LocalConfiguration {
  basePath: String
  baseOptions: JSON
}

type k8sNamespaceMetadata {
  name: String
}
type LocalK8sNamespaces {
  metadata: k8sNamespaceMetadata
}

type LocalFluxResourceStatus {
  status: String
  type: String
}

type K8sResources {
  k8sPods: K8sResource
  k8sServices: K8sResource
}
type K8sResource {
  connectionStatus: String
}

extend type Query {
  environmentApp(page: Int, scope: String): LocalEnvironmentApp
  folder(environment: NestedLocalEnvironmentInput): LocalEnvironmentFolder
  environmentToDelete: LocalEnvironment
  pageInfo: LocalPageInfo
  environmentToRollback: LocalEnvironment
  environmentToStop: LocalEnvironment
  isEnvironmentStopping(environment: LocalEnvironmentInput): Boolean
  isLastDeployment(environment: LocalEnvironmentInput): Boolean
  k8sPods(configuration: LocalConfiguration, namespace: String): [LocalWorkloadItem]
  k8sServices(configuration: LocalConfiguration, namespace: String): [LocalWorkloadItem]
  k8sConnection(configuration: LocalConfiguration): K8sResources
  fluxKustomizationStatus(
    configuration: LocalConfiguration
    namespace: String
    environmentName: String
  ): LocalFluxResourceStatus
  fluxHelmReleaseStatus(
    configuration: LocalConfiguration
    namespace: String
    environmentName: String
  ): LocalFluxResourceStatus
}

extend type Mutation {
  stopEnvironmentREST(environment: LocalEnvironmentInput): LocalErrors
  deleteEnvironment(environment: LocalEnvironmentInput): LocalErrors
  rollbackEnvironment(environment: LocalEnvironmentInput): LocalErrors
  cancelAutoStop(autoStopUrl: String!): LocalErrors
  reconnectToCluster(
    configuration: LocalConfiguration
    namespace: String
    resourceType: String
  ): LocalErrors
  setEnvironmentToDelete(environment: LocalEnvironmentInput): LocalErrors
  setEnvironmentToRollback(environment: LocalEnvironmentInput): LocalErrors
  setEnvironmentToStop(environment: LocalEnvironmentInput): LocalErrors
  setEnvironmentToChangeCanary(environment: LocalEnvironmentInput, weight: Int): LocalErrors
  action(environment: LocalEnvironmentInput): LocalErrors
}
